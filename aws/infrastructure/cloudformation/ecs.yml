# CloudFormation Template for ECS Infrastructure
# This template creates ECS cluster, task definitions, and services for ShopLite microservices

AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS infrastructure for ShopLite microservices deployment'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name
  
  AWSAccountId:
    Type: String
    Description: AWS Account ID for ECR images
  
  AWSRegion:
    Type: String
    Default: us-east-1
    Description: AWS Region

Conditions:
  IsProd: !Equals [!Ref Environment, prod]

Resources:
  # ========================================
  # ECS Cluster
  # ========================================
  
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${Environment}-shoplite-cluster'
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-cluster'
        - Key: Environment
          Value: !Ref Environment

  # ========================================
  # Application Load Balancer
  # ========================================
  
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${Environment}-shoplite-alb'
      Scheme: internet-facing
      Type: application
      Subnets:
        - !ImportValue
          Fn::Sub: '${Environment}-shoplite-public-subnet-1-id'
        - !ImportValue
          Fn::Sub: '${Environment}-shoplite-public-subnet-2-id'
      SecurityGroups:
        - !ImportValue
          Fn::Sub: '${Environment}-shoplite-alb-sg-id'
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-alb'
        - Key: Environment
          Value: !Ref Environment

  # ========================================
  # Target Groups
  # ========================================
  
  APIGatewayTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Environment}-shoplite-api-gateway-tg'
      Port: 8080
      Protocol: HTTP
      VpcId: !ImportValue
        Fn::Sub: '${Environment}-shoplite-vpc-id'
      TargetType: ip
      HealthCheckPath: /actuator/health
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-api-gateway-tg'
        - Key: Environment
          Value: !Ref Environment

  FrontendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${Environment}-shoplite-frontend-tg'
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue
        Fn::Sub: '${Environment}-shoplite-vpc-id'
      TargetType: ip
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-frontend-tg'
        - Key: Environment
          Value: !Ref Environment

  # ========================================
  # ALB Listeners
  # ========================================
  
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FrontendTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  APIGatewayListener:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref APIGatewayTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - /api/*
      ListenerArn: !Ref ALBListener
      Priority: 100

  # ========================================
  # ECS Task Definitions
  # ========================================
  
  EurekaServerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-eureka-server'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: eureka-server
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-eureka:latest'
          PortMappings:
            - ContainerPort: 8761
              Protocol: tcp
          Environment:
            - Name: SERVER_PORT
              Value: '8761'
            - Name: JAEGER_ENDPOINT
              Value: !Sub 'http://${JaegerService.ServiceName}:9411/api/v2/spans'
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: eureka-server
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8761/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  APIGatewayTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-api-gateway'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: api-gateway
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-api-gateway:latest'
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Environment:
            - Name: SERVER_PORT
              Value: '8080'
            - Name: AUTH0_ISSUER_URI
              Value: !Ref Auth0IssuerURI
            - Name: AUTH0_AUDIENCE
              Value: !Ref Auth0Audience
            - Name: CORS_ALLOWED_ORIGINS
              Value: !Ref CORSAllowedOrigins
            - Name: EUREKA_DEFAULT_ZONE
              Value: !Sub 'http://${EurekaService.ServiceName}:8761/eureka/'
            - Name: JAEGER_ENDPOINT
              Value: !Sub 'http://${JaegerService.ServiceName}:9411/api/v2/spans'
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: api-gateway
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8080/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  OrderServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-order-service'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: order-service
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-order:latest'
          PortMappings:
            - ContainerPort: 8081
              Protocol: tcp
          Environment:
            - Name: SERVER_PORT
              Value: '8081'
            - Name: AUTH0_ISSUER_URI
              Value: !Ref Auth0IssuerURI
            - Name: AUTH0_AUDIENCE
              Value: !Ref Auth0Audience
            - Name: DB_HOST
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-orders-db-endpoint'
            - Name: DB_PORT
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-orders-db-port'
            - Name: DB_NAME
              Value: ordersdb
            - Name: DB_USERNAME
              Value: !Ref DBUsername
            - Name: DB_PASSWORD
              Value: !Ref DBPassword
            - Name: KAFKA_BOOTSTRAP_SERVERS
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-msk-bootstrap-servers'
            - Name: EUREKA_DEFAULT_ZONE
              Value: !Sub 'http://${EurekaService.ServiceName}:8761/eureka/'
            - Name: JAEGER_ENDPOINT
              Value: !Sub 'http://${JaegerService.ServiceName}:9411/api/v2/spans'
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: order-service
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8081/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  CatalogServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-catalog-service'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: catalog-service
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-catalog:latest'
          PortMappings:
            - ContainerPort: 8082
              Protocol: tcp
          Environment:
            - Name: SERVER_PORT
              Value: '8082'
            - Name: AUTH0_ISSUER_URI
              Value: !Ref Auth0IssuerURI
            - Name: AUTH0_AUDIENCE
              Value: !Ref Auth0Audience
            - Name: MONGO_HOST
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-documentdb-endpoint'
            - Name: MONGO_PORT
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-documentdb-port'
            - Name: MONGO_DATABASE
              Value: catalogdb
            - Name: MONGO_USERNAME
              Value: !Ref DocumentDBUsername
            - Name: MONGO_PASSWORD
              Value: !Ref DocumentDBPassword
            - Name: KAFKA_BOOTSTRAP_SERVERS
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-msk-bootstrap-servers'
            - Name: EUREKA_DEFAULT_ZONE
              Value: !Sub 'http://${EurekaService.ServiceName}:8761/eureka/'
            - Name: JAEGER_ENDPOINT
              Value: !Sub 'http://${JaegerService.ServiceName}:9411/api/v2/spans'
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: catalog-service
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8082/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  AuthServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-auth-service'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: auth-service
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-auth:latest'
          PortMappings:
            - ContainerPort: 8083
              Protocol: tcp
          Environment:
            - Name: SERVER_PORT
              Value: '8083'
            - Name: AUTH0_ISSUER_URI
              Value: !Ref Auth0IssuerURI
            - Name: AUTH0_AUDIENCE
              Value: !Ref Auth0Audience
            - Name: DB_HOST
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-auth-db-endpoint'
            - Name: DB_PORT
              Value: !ImportValue
                Fn::Sub: '${Environment}-shoplite-auth-db-port'
            - Name: DB_NAME
              Value: shoplite_auth
            - Name: DB_USERNAME
              Value: !Ref DBUsername
            - Name: DB_PASSWORD
              Value: !Ref DBPassword
            - Name: EUREKA_DEFAULT_ZONE
              Value: !Sub 'http://${EurekaService.ServiceName}:8761/eureka/'
            - Name: JAEGER_ENDPOINT
              Value: !Sub 'http://${JaegerService.ServiceName}:9411/api/v2/spans'
            - Name: SPRING_PROFILES_ACTIVE
              Value: aws
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: auth-service
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -f http://localhost:8083/actuator/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60

  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-frontend'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 128
      Memory: 256
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: frontend
          Image: !Sub '${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/shoplite-frontend:latest'
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: frontend
          HealthCheck:
            Command:
              - CMD-SHELL
              - wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 10

  JaegerTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${Environment}-shoplite-jaeger'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: jaeger
          Image: jaegertracing/all-in-one:1.51
          PortMappings:
            - ContainerPort: 16686
              Protocol: tcp
            - ContainerPort: 14268
              Protocol: tcp
            - ContainerPort: 14250
              Protocol: tcp
            - ContainerPort: 9411
              Protocol: tcp
          Environment:
            - Name: COLLECTOR_OTLP_ENABLED
              Value: 'true'
            - Name: COLLECTOR_ZIPKIN_HOST_PORT
              Value: ':9411'
            - Name: SPAN_STORAGE_TYPE
              Value: memory
            - Name: LOG_LEVEL
              Value: info
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWSRegion
              awslogs-stream-prefix: jaeger

  # ========================================
  # ECS Services
  # ========================================
  
  EurekaService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-eureka-server'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref EurekaServerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      ServiceRegistries:
        - RegistryArn: !GetAtt EurekaServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-eureka-server'
        - Key: Environment
          Value: !Ref Environment

  APIGatewayService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-api-gateway'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref APIGatewayTaskDefinition
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      LoadBalancers:
        - ContainerName: api-gateway
          ContainerPort: 8080
          TargetGroupArn: !Ref APIGatewayTargetGroup
      ServiceRegistries:
        - RegistryArn: !GetAtt APIGatewayServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-api-gateway'
        - Key: Environment
          Value: !Ref Environment

  OrderService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-order-service'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref OrderServiceTaskDefinition
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      ServiceRegistries:
        - RegistryArn: !GetAtt OrderServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-order-service'
        - Key: Environment
          Value: !Ref Environment

  CatalogService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-catalog-service'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref CatalogServiceTaskDefinition
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      ServiceRegistries:
        - RegistryArn: !GetAtt CatalogServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-catalog-service'
        - Key: Environment
          Value: !Ref Environment

  AuthService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-auth-service'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref AuthServiceTaskDefinition
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      ServiceRegistries:
        - RegistryArn: !GetAtt AuthServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-auth-service'
        - Key: Environment
          Value: !Ref Environment

  FrontendService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-frontend'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref FrontendTaskDefinition
      DesiredCount: !If [IsProd, 2, 1]
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      LoadBalancers:
        - ContainerName: frontend
          ContainerPort: 80
          TargetGroupArn: !Ref FrontendTargetGroup
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-frontend'
        - Key: Environment
          Value: !Ref Environment

  JaegerService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${Environment}-shoplite-jaeger'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref JaegerTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-ecs-sg-id'
          Subnets:
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-1-id'
            - !ImportValue
              Fn::Sub: '${Environment}-shoplite-private-subnet-2-id'
          AssignPublicIp: DISABLED
      ServiceRegistries:
        - RegistryArn: !GetAtt JaegerServiceDiscovery.Arn
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-shoplite-jaeger'
        - Key: Environment
          Value: !Ref Environment

  # ========================================
  # Service Discovery
  # ========================================
  
  ServiceDiscoveryNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: !Sub '${Environment}-shoplite.local'
      Vpc: !ImportValue
        Fn::Sub: '${Environment}-shoplite-vpc-id'
      Description: Service discovery namespace for ShopLite microservices

  EurekaServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: eureka-server
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /actuator/health
        FailureThreshold: 3

  APIGatewayServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: api-gateway
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /actuator/health
        FailureThreshold: 3

  OrderServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: order-service
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /actuator/health
        FailureThreshold: 3

  CatalogServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: catalog-service
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /actuator/health
        FailureThreshold: 3

  AuthServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: auth-service
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /actuator/health
        FailureThreshold: 3

  JaegerServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Name: jaeger
      NamespaceId: !Ref ServiceDiscoveryNamespace
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
      HealthCheckConfig:
        Type: HTTP
        ResourcePath: /
        FailureThreshold: 3

  # ========================================
  # IAM Roles
  # ========================================
  
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: '*'

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  # ========================================
  # CloudWatch Logs
  # ========================================
  
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${Environment}-shoplite'
      RetentionInDays: !If [IsProd, 30, 7]

Outputs:
  ECSClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster
    Export:
      Name: !Sub '${Environment}-shoplite-ecs-cluster-name'

  ALBDNSName:
    Description: Application Load Balancer DNS Name
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub '${Environment}-shoplite-alb-dns-name'

  ALBHostedZoneId:
    Description: Application Load Balancer Hosted Zone ID
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: !Sub '${Environment}-shoplite-alb-hosted-zone-id'
